{"ast":null,"code":"var _jsxFileName = \"/Users/amircharkhi/Documents/amir/projects/ai-tech-institute/src/components/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Autosuggest from 'react-autosuggest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst courses = [{\n  id: 1,\n  name: 'AI Basics in One Day'\n}, {\n  id: 2,\n  name: 'Introduction to Data Science'\n}, {\n  id: 3,\n  name: 'Machine Learning Crash Course'\n}, {\n  id: 4,\n  name: 'AI Engineering Advanced'\n}, {\n  id: 5,\n  name: 'Python Developer Course'\n}, {\n  id: 6,\n  name: 'AI and Data Science Fundamentals'\n}];\n\n// Teach Autosuggest how to calculate suggestions for any given input value.\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  return inputLength === 0 ? [] : courses.filter(course => course.name.toLowerCase().includes(inputValue));\n};\n\n// When suggestion is clicked, Autosuggest needs to populate the input\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\nconst getSuggestionValue = suggestion => suggestion.name;\n\n// Use your imagination to render suggestions.\nconst renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: suggestion.name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this);\nconst HomePage = () => {\n  _s();\n  const [value, setValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  const onSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  const onSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  // When suggestion is selected, set the value to the selected course\n  const onSuggestionSelected = (event, {\n    suggestion\n  }) => {\n    setValue(suggestion.name);\n  };\n  const inputProps = {\n    placeholder: 'Search for a course...',\n    value,\n    onChange: (e, {\n      newValue\n    }) => setValue(newValue),\n    className: 'w-full px-3 py-2 border rounded mb-4'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-6 py-12\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"text-center bg-yellowCream p-6 rounded shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-green mb-4\",\n        children: \"Find the best AI courses for your next leap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-green mb-6\",\n        children: \"A curated directory of courses and resources for building AI skills.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: onSuggestionsClearRequested,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion,\n        inputProps: inputProps,\n        onSuggestionSelected: onSuggestionSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/contact\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green text-white px-4 py-2 rounded hover:bg-yellowCream hover:text-green\",\n          children: \"Get Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"Ff4DO9QZoR8btp5gYnEyqRR30Ok=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","Link","Autosuggest","jsxDEV","_jsxDEV","courses","id","name","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","filter","course","includes","getSuggestionValue","suggestion","renderSuggestion","children","fileName","_jsxFileName","lineNumber","columnNumber","HomePage","_s","setValue","suggestions","setSuggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","event","inputProps","placeholder","onChange","e","newValue","className","to","_c","$RefreshReg$"],"sources":["/Users/amircharkhi/Documents/amir/projects/ai-tech-institute/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Autosuggest from 'react-autosuggest';\n\nconst courses = [\n  { id: 1, name: 'AI Basics in One Day' },\n  { id: 2, name: 'Introduction to Data Science' },\n  { id: 3, name: 'Machine Learning Crash Course' },\n  { id: 4, name: 'AI Engineering Advanced' },\n  { id: 5, name: 'Python Developer Course' },\n  { id: 6, name: 'AI and Data Science Fundamentals' }\n];\n\n// Teach Autosuggest how to calculate suggestions for any given input value.\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength === 0 ? [] : courses.filter(course =>\n    course.name.toLowerCase().includes(inputValue)\n  );\n};\n\n// When suggestion is clicked, Autosuggest needs to populate the input\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\nconst getSuggestionValue = suggestion => suggestion.name;\n\n// Use your imagination to render suggestions.\nconst renderSuggestion = suggestion => (\n  <div>\n    {suggestion.name}\n  </div>\n);\n\nconst HomePage = () => {\n  const [value, setValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  const onSuggestionsFetchRequested = ({ value }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  const onSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  // When suggestion is selected, set the value to the selected course\n  const onSuggestionSelected = (event, { suggestion }) => {\n    setValue(suggestion.name);\n  };\n\n  const inputProps = {\n    placeholder: 'Search for a course...',\n    value,\n    onChange: (e, { newValue }) => setValue(newValue),\n    className: 'w-full px-3 py-2 border rounded mb-4'\n  };\n\n  return (\n    <div className=\"container mx-auto px-6 py-12\">\n      <section className=\"text-center bg-yellowCream p-6 rounded shadow-md\">\n        <h1 className=\"text-4xl font-bold text-green mb-4\">Find the best AI courses for your next leap</h1>\n        <p className=\"text-lg text-green mb-6\">A curated directory of courses and resources for building AI skills.</p>\n        \n        <Autosuggest\n          suggestions={suggestions}\n          onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={onSuggestionsClearRequested}\n          getSuggestionValue={getSuggestionValue}\n          renderSuggestion={renderSuggestion}\n          inputProps={inputProps}\n          onSuggestionSelected={onSuggestionSelected}\n        />\n\n        <Link to=\"/contact\">\n          <button className=\"bg-green text-white px-4 py-2 rounded hover:bg-yellowCream hover:text-green\">Get Started</button>\n        </Link>\n      </section>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}